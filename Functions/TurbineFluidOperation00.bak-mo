within PropulsionSystem.Functions;

function TurbineFluidOperation00
  extends Modelica.Icons.Function;
  //****************************************
  import Units= Modelica.SIunits;
  //****************************************
  replaceable package inFuncMedium = Modelica.Media.Interfaces.PartialMedium annotation(
    choicesAllMatching = true);
  //----------
  input inFuncMedium.ThermodynamicState state_1;
  input inFuncMedium.MassFraction Xi1[inFuncMedium.nX];
  input Units.MassFlowRate m_flow1;
  input Real PR;
  input Real eff;
  //----------
  output inFuncMedium.ThermodynamicState state_2;
  //----------
  
//*******************************************************
protected
  Units.SpecificEnthalpy h1;
  Units.Pressure p2;
  Units.SpecificEnthalpy h2;
  Units.SpecificEnthalpy h2_is;
  Units.SpecificEnthalpy dht;
  Units.SpecificEnthalpy dht_is;
  /**/
//*******************************************************
algorithm
  h1:=inFuncMedium.specificEnthalpy(state_1);
  p2:= state_1.p/PR;
  h2_is:= inFuncMedium.isentropicEnthalpy(p2, state_1);
  dht_is:= h2_is - h1;
  dht:= eff*dht_is;
  h2:= h1 + dht;
  //-----
  state_2:= inFuncMedium.setState_phX(p2, h2, Xi1);
  /**/
end TurbineFluidOperation00;
